- type: entity
  parent: GasPipeBase
  abstract: true
  id: GasUnaryBase
  placement:
    mode: SnapgridCenter
  components:
    - type: AtmosDevice
    - type: Tag
      tags:
        - Unstackable
    - type: SubFloorHide
      blockInteractions: false
      blockAmbience: false
    - type: NodeContainer
      nodes:
        pipe:
          !type:PipeNode
          nodeGroupID: Pipe
          pipeDirection: South
    - type: CollideOnAnchor

- type: entity
  parent: GasUnaryBase
  id: GasVentPump
  name: air vent
  description: Has a valve and a pump attached to it.
  placement:
    mode: SnapgridCenter
  components:
    - type: ApcPowerReceiver
    - type: ExtensionCableReceiver
    - type: DeviceNetwork
      deviceNetId: AtmosDevices
      receiveFrequencyId: AtmosMonitor
      transmitFrequencyId: AtmosMonitor
      prefix: device-address-prefix-vent
      sendBroadcastAttemptEvent: true
      examinableAddress: true
    - type: WiredNetworkConnection
    - type: DeviceNetworkRequiresPower
    - type: AtmosDevice
    - type: AtmosMonitor
      temperatureThresholdId: stationTemperature
      pressureThresholdId: stationPressure
      gasThresholdPrototypes:
        Oxygen: stationOxygen
        Nitrogen: ignore
        CarbonDioxide: stationCO2
        Plasma: danger # everything below is usually bad
        Tritium: danger
        WaterVapor: stationWaterVapor
        Miasma: stationMiasma
        NitrousOxide: stationNO
        Frezon: danger
    - type: Tag
      tags:
        - GasVent
        - Unstackable
    - type: Sprite
      drawdepth: FloorObjects
      sprite: Structures/Piping/Atmospherics/vent.rsi
      noRot: true
      layers:
        - sprite: Structures/Piping/Atmospherics/pipe.rsi
          state: pipeHalf
          map: [ "enum.PipeVisualLayers.Pipe" ]
        - state: vent_off
          map: [ "enabled", "enum.SubfloorLayers.FirstLayer" ]
    - type: Appearance
    - type: PipeColorVisuals
    - type: GenericVisualizer
      visuals:
        enum.VentPumpVisuals.State:
          enabled:
            Off: { state: vent_off }
            In: { state: vent_in }
            Out: { state: vent_out }
            Welded: { state: vent_welded }
    - type: GasVentPump
    - type: Construction
      graph: GasUnary
      node: ventpump
    - type: VentCritterSpawnLocation
    - type: AmbientSound
      enabled: true
      volume: -12
      range: 5
      sound:
        path: /Audio/Ambience/Objects/gas_vent.ogg
    - type: Weldable

- type: entity
  parent: GasUnaryBase
  id: GasPassiveVent
  name: passive vent
  description: It's an open vent.
  placement:
    mode: SnapgridCenter
  components:
    # TODO ATMOS: Find sprite for this.
    - type: Sprite
      drawdepth: FloorObjects
      sprite: Structures/Piping/Atmospherics/vent.rsi
      noRot: true
      layers:
        - sprite: Structures/Piping/Atmospherics/pipe.rsi
          state: pipeHalf
          map: [ "enum.PipeVisualLayers.Pipe" ]
        - state: vent_off
          map: [ "enum.SubfloorLayers.FirstLayer" ]
    - type: Appearance
    - type: PipeColorVisuals
    - type: GasPassiveVent
    - type: Construction
      graph: GasUnary
      node: passivevent

- type: entity
  parent: GasUnaryBase
  id: GasVentScrubber
  name: air scrubber
  description: Has a valve and pump attached to it.
  placement:
    mode: SnapgridCenter
  components:
    - type: ApcPowerReceiver
    - type: ExtensionCableReceiver
    - type: DeviceNetwork
      deviceNetId: AtmosDevices
      receiveFrequencyId: AtmosMonitor
      transmitFrequencyId: AtmosMonitor
      prefix: device-address-prefix-scrubber
      examinableAddress: true
    - type: DeviceNetworkRequiresPower
    - type: AtmosMonitor
      temperatureThresholdId: stationTemperature
      pressureThresholdId: stationPressure
      gasThresholdPrototypes:
        Oxygen: stationOxygen
        Nitrogen: ignore
        CarbonDioxide: stationCO2
        Plasma: danger # everything below is usually bad
        Tritium: danger
        WaterVapor: stationWaterVapor
        Miasma: stationMiasma
        NitrousOxide: stationNO
        Frezon: danger
    - type: Tag
      tags:
        - GasScrubber
        - Unstackable
    - type: Sprite
      drawdepth: FloorObjects
      sprite: Structures/Piping/Atmospherics/scrubber.rsi
      noRot: true
      layers:
        - sprite: Structures/Piping/Atmospherics/pipe.rsi
          state: pipeHalf
          map: [ "enum.PipeVisualLayers.Pipe" ]
        - state: scrub_off
          map: [ "enabled", "enum.SubfloorLayers.FirstLayer" ]
    - type: Appearance
    - type: PipeColorVisuals
    - type: GenericVisualizer
      visuals:
        enum.ScrubberVisuals.State:
          enabled:
            Off: { state: scrub_off }
            Scrub: { state: scrub_on }
            Siphon: { state: scrub_purge }
            WideScrub: { state: scrub_wide }
            Welded: { state: scrub_welded }
    - type: AtmosDevice
    - type: GasVentScrubber
    - type: Construction
      graph: GasUnary
      node: ventscrubber
    - type: AmbientSound
      enabled: true
      volume: -12
      range: 5
      sound:
        path: /Audio/Ambience/Objects/gas_vent.ogg
    - type: Weldable

- type: entity
  parent: GasUnaryBase
  id: GasOutletInjector
  name: air injector
  description: Has a valve and pump attached to it.
  placement:
    mode: SnapgridCenter
  components:
    - type: Sprite
      drawdepth: FloorObjects
      sprite: Structures/Piping/Atmospherics/outletinjector.rsi
      layers:
        - state: pipeHalf
          sprite: Structures/Piping/Atmospherics/pipe.rsi
          map: [ "enum.PipeVisualLayers.Pipe" ]
        - state: injector
          map: [ "enum.SubfloorLayers.FirstLayer" ]
        - state: injector-unshaded
          shader: unshaded
          map: [ "enum.LightLayers.Unshaded" ]
          color: "#990000"
    - type: GenericVisualizer
      visuals:
       # toggle color of the unshaded light:
       enum.OutletInjectorVisuals.Enabled:
         unshaded:
           True: { color: "#5eff5e" }
           False: { color: "#990000" }
    - type: Appearance
    - type: PipeColorVisuals
    - type: GasOutletInjector
    - type: Construction
      graph: GasUnary
      node: outletinjector
    - type: SubFloorHide
      visibleLayers:
      - enum.SubfloorLayers.FirstLayer
      - enum.LightLayers.Unshaded

- type: entity
  parent: [ BaseMachinePowered, ConstructibleMachine ]
  id: BaseGasThermoMachine
  name: thermomachine
  abstract: true
  placement:
    mode: SnapgridCenter
  components:
    - type: Sprite
      sprite: Structures/Piping/Atmospherics/thermomachine.rsi
      snapCardinals: true
    - type: Appearance
    - type: PipeColorVisuals
    - type: Rotatable
    - type: GasThermoMachine
    - type: AtmosPipeColor
    - type: AtmosDevice
    - type: UserInterface
      interfaces:
      - key: enum.ThermomachineUiKey.Key
        type: GasThermomachineBoundUserInterface
    - type: ActivatableUI
      inHandsOnly: false
      key: enum.ThermomachineUiKey.Key
    - type: WiresPanel
    - type: Wires
      boardName: wires-board-name-thermomachine
      layoutId: Thermomachine
    - type: WiresVisuals
    - type: NodeContainer
      nodes:
        pipe:
          !type:PipeNode
          nodeGroupID: Pipe
          pipeDirection: South
    - type: Transform
      noRot: false
    - type: DeviceNetwork
      deviceNetId: AtmosDevices
      receiveFrequencyId: AtmosMonitor
      transmitFrequencyId: AtmosMonitor
      sendBroadcastAttemptEvent: true
      examinableAddress: true
    - type: WiredNetworkConnection
    - type: PowerSwitch

- type: entity
  parent: BaseGasThermoMachine
  id: GasThermoMachineFreezer
  name: freezer
  description: Cools gas in connected pipes.
  placement:
    mode: SnapgridCenter
  components:
    - type: Sprite
      granularLayersRendering: true
      layers:
        - state: freezerOff
          map: [ "enum.PowerDeviceVisualLayers.Powered" ]
        - state: freezerPanelOpen
          map: [ "enum.WiresVisualLayers.MaintenancePanel" ]
        - state: pipe
          map: [ "enum.PipeVisualLayers.Pipe" ]
          renderingStrategy: Default
    - type: GenericVisualizer
      visuals:
        enum.PowerDeviceVisuals.Powered:
          enum.PowerDeviceVisualLayers.Powered:
            True: { state: freezerOn }
            False: { state: freezerOff }
    - type: GasThermoMachine
      coefficientOfPerformance: -64
    - type: ApcPowerReceiver
      powerDisabled: true #starts off
    - type: Machine
      board: ThermomachineFreezerMachineCircuitBoard
    - type: DeviceNetwork
      prefix: device-address-prefix-freezer

- type: entity
  parent: GasThermoMachineFreezer
  id: GasThermoMachineFreezerEnabled
  suffix: Enabled
  components:
  - type: GasThermoMachine
    enabled: true
  - type: ApcPowerReceiver
    powerDisabled: false

- type: entity
  parent: BaseGasThermoMachine
  id: GasThermoMachineHeater
  name: heater
  description: Heats gas in connected pipes.
  placement:
    mode: SnapgridCenter
  components:
    - type: Sprite
      granularLayersRendering : true
      layers:
        - state: heaterOff
          map: [ "enum.PowerDeviceVisualLayers.Powered" ]
        - state: heaterPanelOpen
          map: ["enum.WiresVisualLayers.MaintenancePanel"]
        - state: pipe
          map: [ "enum.PipeVisualLayers.Pipe" ]
          renderingStrategy: Default
    - type: GenericVisualizer
      visuals:
        enum.PowerDeviceVisuals.Powered:
          enum.PowerDeviceVisualLayers.Powered:
            True: { state: heaterOn }
            False: { state: heaterOff }
    - type: GasThermoMachine
      coefficientOfPerformance: 32
    - type: ApcPowerReceiver
      powerDisabled: true #starts off
    - type: Machine
      board: ThermomachineHeaterMachineCircuitBoard
    - type: DeviceNetwork
      prefix: device-address-prefix-heater

- type: entity
  parent: GasThermoMachineHeater
  id: GasThermoMachineHeaterEnabled
  suffix: Enabled
  components:
  - type: GasThermoMachine
    enabled: true
  - type: ApcPowerReceiver
    powerDisabled: false
