- type: entity
  parent: [ BaseStructureDynamic, BaseMachinePowered, ConstructibleMachine ]
  id: GasMiningDrill
  name: gas mining drill
  description: A powerful, luggable drill for mining gas deposits on asteroids. Outputs gas through a pipe.
  placement:
    mode: SnapgridCenter
  components:
  - type: Appearance
  - type: PipeColorVisuals
  - type: Rotatable
  - type: AtmosPipeColor
  - type: AtmosDevice
    joinSystem: true
  - type: UserInterface
    interfaces:
      enum.GasPressurePumpUiKey.Key:
        type: GasDepositExtractorBoundUserInterface
  - type: ActivatableUI
    inHandsOnly: false
    key: enum.GasPressurePumpUiKey.Key
  - type: ActivatableUIRequiresAnchor
  - type: WiresPanel
  - type: WiresVisuals
  - type: PipeRestrictOverlap
  - type: NodeContainer
    nodes:
      outlet:
        !type:PipeNode
        nodeGroupID: Pipe
        pipeDirection: South
  - type: Transform
    noRot: false
  - type: DeviceNetwork
    deviceNetId: AtmosDevices
    receiveFrequencyId: AtmosMonitor
    transmitFrequencyId: AtmosMonitor
    sendBroadcastAttemptEvent: true
    examinableAddress: true
    prefix: device-address-prefix-gas-drill
  - type: WiredNetworkConnection
  - type: PowerSwitch
  - type: Sprite
    sprite: _NF/Objects/Specific/Atmospherics/extractor.rsi
    snapCardinals: true
    granularLayersRendering: true
    layers:
      - state: pipe
        map: [ "enum.PipeVisualLayers.Pipe" ]
        renderingStrategy: Default
      - state: drill-off
        map: [ "drill" ]
      - state: base
      - state: base-powered
        shader: unshaded
        visible: false
        map: [ "enum.PowerDeviceVisualLayers.Powered" ]
      - state: drill-empty-unlit
        shader: unshaded
        map: [ "light" ]
        visible: false
      - state: panel
        map: ["enum.WiresVisualLayers.MaintenancePanel"]
  - type: GenericVisualizer
    visuals:
      enum.PowerDeviceVisuals.Powered:
        enum.PowerDeviceVisualLayers.Powered:
          True: { visible: true }
          False: { visible: false }
      enum.GasDepositExtractorVisuals.State:
        drill:
          Off: { state: drill-off }
          Blocked: { state: drill-off }
          Empty: { state: drill-off }
          Low: { state: drill }
          On: { state: drill }
        light:
          Off: { visible: false }
          Blocked: { state: drill-blocked-unlit, visible: true }
          Empty: { state: drill-empty-unlit, visible: true }
          Low: { state: drill-low-unlit, visible: true }
          On: { state: drill-on-unlit, visible: true }
  - type: ApcPowerReceiver
    powerLoad: 1000
  - type: Machine
    board: GasMiningDrillMachineCircuitboard
  - type: GasDepositExtractor
    baseExtractionRate: 50 # 50 mol/s => 20 kmol in ~6.6 min
    extractionRate: 50
    extractionRateMultiplier: 1.2 # max rate: 86.4 mol/s => 20 kmol in ~3.9 min
    port: outlet
  - type: Fixtures
    fixtures:
      fix1:
        shape:
          !type:PhysShapeAabb
          bounds: "-0.35,-0.35,0.35,0.35" # a little smaller, should fit through doors
        density: 60
        mask:
        - MachineMask
        layer:
        - MidImpassable
        - LowImpassable
  - type: BindToStation
    enabled: false # should be draggable between stations

- type: entity
  parent: [ BaseStructureIndestructible, BaseStructureDisableToolUse, BaseMachinePowered ]
  id: GasSalePoint
  name: gas sale point
  suffix: Internal
  description: Gas piped into here can be sold using the linked console. Bluespace linked to massive storage vaults off-site.
  components:
  - type: Transform
    noRot: false
  - type: NodeContainer
    nodes:
      inlet:
        !type:PipeNode
        nodeGroupID: Pipe
        pipeDirection: South
  - type: DeviceNetwork
    prefix: device-address-prefix-sale-point
  - type: WiredNetworkConnection # still needed?
  - type: Sprite
    sprite: _NF/Structures/Piping/Atmospherics/salepoint.rsi
    layers:
      - state: base
      - state: base-unlit
        shader: unshaded
      - state: on-unlit
        shader: unshaded
        visible: false
        map: [ "enum.PowerDeviceVisualLayers.Powered" ]
      - state: pipe
        map: [ "enum.PipeVisualLayers.Pipe" ]
  - type: ApcPowerReceiver
    powerLoad: 1000
  - type: Machine
    board: Null # FIXME
  - type: GasSalePoint
  - type: CargoSellBlacklist
  - type: ContainerContainer
    containers:
      board: !type:Container
        showEnts: False
        occludes: True
        ents: []
      machine_board: !type:Container
        showEnts: False
        occludes: True
        ents: []
      machine_parts: !type:Container
        showEnts: False
        occludes: True
        ents: []
  - type: AtmosDevice

- type: entity
  parent: [ GasSalePoint, BaseGaslock ]
  id: GasSalePort
  name: gas sale port
  suffix: Dockable
  components:
  - type: NodeContainer
    nodes:
      inlet:
        !type:DockablePipeNode
        nodeGroupID: Pipe
        pipeDirection: South
  - type: Sprite
    sprite: _NF/Structures/Piping/Atmospherics/salepoint.rsi
    layers:
      - state: base
      - state: base-unlit
        shader: unshaded
      - state: struts
      - state: docked-unlit
        shader: unshaded
        visible: false
        map: [ "docked-unlit" ]
      - state: on-unlit
        shader: unshaded
        visible: false
        map: [ "enum.PowerDeviceVisualLayers.Powered" ]
      - state: pipe
        map: [ "enum.PipeVisualLayers.Pipe" ]
  - type: DockablePipe
    dockNodeName: inlet
    internalNodeName: inlet
  - type: GenericVisualizer
    visuals:
      enum.DockablePipeVisuals.Docked:
        docked-unlit:
          True: { visible: true }
          False: { visible: false }

# When mapping this, ensure the middle square has HV cable and a connector port, it should work.
- type: entity
  parent: [ BaseStructureDisableToolUse, BaseStructureIndestructible, BaseMachine ]
  id: EnergyAirConverter
  name: energy-to-air converter
  description: An enormous machine that converts huge amounts of power into superheated air.
  placement:
    mode: SnapgridCenter
  components:
  - type: Anchorable
    flags: None
  - type: Fixtures
    fixtures:
      fix1:
        shape:
          !type:PhysShapeAabb
          bounds: "-1.45,-1.45,1.45,1.45"
        density: 500
        mask:
        - LargeMobMask
        layer:
        - WallLayer
  - type: NodeContainer
    examinable: true
    nodes:
      input:
        !type:CableDeviceNode
        nodeGroupID: HVPower
        enabled: false
      port:
        !type:PortablePipeNode
        nodeGroupID: Pipe
        rotationsEnabled: false
        volume: 1
  - type: Sprite
    noRot: true
    drawdepth: Mobs
    sprite: _NF/Structures/Machines/GasConverter/32x32.rsi
    layers:
    - sprite: _NF/Structures/Machines/GasConverter/base.rsi
      state: base
    - state: fan
      map: [fan]
      offset: -0.6875, 1 # 11/16, -22 px offset
    - state: front-panel-unlit
      shader: unshaded
      map: [front-panel]
      offset: 0, -1
    - state: gas
      color: "#FFFFFF01"
      map: [gas]
      offset: 1, 0.5
    - state: window-unlit
      shader: unshaded
      map: [window]
      offset: 0, 0.25
    - state: panel-unlit
      shader: unshaded
      map: [panel]
  - type: Appearance
  - type: GenericVisualizer
    visuals:
      enum.PowerDeviceVisuals.Powered:
        fan:
          True: { state: fan-animated }
          False: { state: fan }
        front-panel:
          True: { visible: true }
          False: { visible: false }
        panel:
          True: { visible: true }
          False: { visible: false }
        window:
          True: { visible: true }
          False: { visible: false }
      enum.GasCanisterVisuals.PressureState:
        gas:
          0: { color: "#FFFFFF01" }
          1: { color: "#FFFFFF22" }
          2: { color: "#FFFFFF44" }
          3: { color: "#FFFFFF66" }
  - type: PowerConsumer
    drawRate: 100000
  - type: PowerMonitoringDevice
    group: Consumer
    loadNode: input
    collectionName: transmissionpoint
    sprite: _NF/Structures/Power/transmission_point_icon.rsi
    state: icon # FIXME: no icon, machine doesn't appear on the power monitor
  - type: WiredNetworkConnection
  - type: UserInterface
    interfaces:
      enum.AdjustablePowerDrawUiKey.Key:
        type: AdjustablePowerDrawBoundUserInterface
  - type: ActivatableUI
    key: enum.AdjustablePowerDrawUiKey.Key
  - type: GasSpawnPowerConsumer
    spawnMixture:
      moles:
      - 0.22 # Oxygen
      - 0.78 # Nitrogen
      temperature: 5273 # ~ 5000 deg C, roughly when plasma turns back into gas
  - type: GasCanister
    gasMixture:
      volume: 10000 # big tank to store backup
    gasTankSlot:
      locked: True # cannot be unlocked, unusable
  - type: AtmosDevice
    requireAnchored: false
    joinSystem: true
  - type: GasPortable # for the connector port
  - type: ItemSlots
  - type: ContainerContainer
    containers:
      tank_slot: !type:ContainerSlot {}
