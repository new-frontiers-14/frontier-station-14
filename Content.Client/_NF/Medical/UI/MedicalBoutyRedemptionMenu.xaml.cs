using Content.Client.UserInterface.Controls;
using Content.Shared._NF.Medical;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client._NF.Medical.UI;

[GenerateTypedNameReferences]
public sealed partial class MedicalBountyRedemptionMenu : FancyWindow
{
    public Action? SellRequested;

    public MedicalBountyRedemptionMenu()
    {
        RobustXamlLoader.Load(this);
        SellButton.OnPressed += OnSellPressed;
    }

    private void OnSellPressed(BaseButton.ButtonEventArgs obj)
    {
        SellRequested?.Invoke();
    }

    public void UpdateState(MedicalBountyRedemptionUIState message)
    {
        switch (message.BountyStatus)
        {
            case MedicalBountyRedemptionStatus.NoBody:
            default:
                RedeemLabel.Text = Loc.GetString("medical-bounty-redemption-ui-no-items");
                SellButton.Disabled = true;
                break;
            case MedicalBountyRedemptionStatus.NoBounty:
                RedeemLabel.Text = Loc.GetString("medical-bounty-redemption-ui-no-bounty");
                SellButton.Disabled = true;
                break;
            case MedicalBountyRedemptionStatus.TooDamaged:
                RedeemLabel.Text = Loc.GetString("medical-bounty-redemption-ui-too-much-damage");
                SellButton.Disabled = true;
                break;
            case MedicalBountyRedemptionStatus.Valid:
                RedeemLabel.Text = Loc.GetString("medical-bounty-redemption-ui-valid-bounty", ("amount", message.BountyValue));
                SellButton.Disabled = false;
                break;
        }
    }
}
