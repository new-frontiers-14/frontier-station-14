using Content.Shared._NF.Bank;
using Content.Shared._NF.BountyContracts;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.XAML;

namespace Content.Client._NF.BountyContracts.UI;

[GenerateTypedNameReferences]
public sealed partial class BountyContractUiFragmentListEntry : Control
{
    public event Action<BountyContract>? OnRemoveButtonPressed;

    public BountyContractUiFragmentListEntry(BountyContract contract, bool canRemoveContracts)
    {
        RobustXamlLoader.Load(this);

        BountyName.Text = contract.Name;

        // vessel
        if (string.IsNullOrEmpty(contract.Vessel) || contract.Vessel == Loc.GetString("bounty-contracts-ui-create-vessel-unknown"))
            BountyVessel.Visible = false;
        else
            BountyVessel.Text = Loc.GetString("bounty-contracts-ui-list-vessel", ("vessel", contract.Vessel));

        // bounty description
        if (string.IsNullOrWhiteSpace(contract.Description))
            BountyDescription.Visible = false;
        else
            BountyDescription.SetMessage(contract.Description);

        // author
        string author = contract.Author ?? "";
        if (string.IsNullOrWhiteSpace(contract.Author))
            author = Loc.GetString("bounty-contracts-ui-list-unknown-author");

        BountyAuthor.Text = Loc.GetString("bounty-contracts-ui-list-author", ("author", author));

        // bounty reward
        BountyReward.Text = BankSystemExtensions.ToSpesoString(contract.Reward);

        // remove button
        RemoveButton.OnPressed += _ => OnRemoveButtonPressed?.Invoke(contract);
        RemoveButton.Disabled = !canRemoveContracts;

        // Get category
        var meta = SharedBountyContractSystem.CategoriesMeta[contract.Category];
        BountyPanel.ModulateSelfOverride = meta.UiColor;

        var category = Loc.GetString("bounty-contracts-ui-list-category", ("category", Loc.GetString(meta.Name))); 
        BountyCategory.Text = category;
    }
}
