using System.Globalization;
using Content.Shared.Atmos;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client._NF.Atmos.UI;

/// <summary>
/// Client-side UI used to control a bidirectional gas pressure pump.
/// </summary>
[GenerateTypedNameReferences]
public sealed partial class GasPressureBidiPumpWindow : DefaultWindow
{
    public bool PumpStatus = true;
    public bool PumpInwards = false;

    public event Action? ToggleStatusButtonPressed;
    public event Action? ToggleDirectionButtonPressed;
    public event Action<string>? PumpOutputPressureChanged;

    public GasPressureBidiPumpWindow()
    {
        RobustXamlLoader.Load(this);

        ToggleStatusButton.OnPressed += _ => SetPumpStatus(!PumpStatus);
        ToggleStatusButton.OnPressed += _ => ToggleStatusButtonPressed?.Invoke();

        ToggleDirectionButton.OnPressed += _ => SetPumpDirection(!PumpInwards);
        ToggleDirectionButton.OnPressed += _ => ToggleDirectionButtonPressed?.Invoke();

        PumpPressureOutputInput.OnTextChanged += _ => SetOutputPressureButton.Disabled = false;
        SetOutputPressureButton.OnPressed += _ =>
        {
            PumpOutputPressureChanged?.Invoke(PumpPressureOutputInput.Text ??= "");
            SetOutputPressureButton.Disabled = true;
        };

        SetMaxPressureButton.OnPressed += _ =>
        {
            PumpPressureOutputInput.Text = Atmospherics.MaxOutputPressure.ToString(CultureInfo.CurrentCulture);
            SetOutputPressureButton.Disabled = false;
        };
    }

    public void SetOutputPressure(float pressure)
    {
        PumpPressureOutputInput.Text = pressure.ToString(CultureInfo.CurrentCulture);
    }

    public void SetPumpStatus(bool enabled)
    {
        PumpStatus = enabled;
        if (enabled)
        {
            ToggleStatusButton.Text = Loc.GetString("comp-gas-pump-ui-status-enabled");
        }
        else
        {
            ToggleStatusButton.Text = Loc.GetString("comp-gas-pump-ui-status-disabled");
        }
    }

    public void SetPumpDirection(bool inwards)
    {
        PumpInwards = inwards;
        if (inwards)
        {
            ToggleDirectionButton.Text = Loc.GetString("comp-gas-pump-ui-direction-in");
        }
        else
        {
            ToggleDirectionButton.Text = Loc.GetString("comp-gas-pump-ui-direction-out");
        }
    }
}
