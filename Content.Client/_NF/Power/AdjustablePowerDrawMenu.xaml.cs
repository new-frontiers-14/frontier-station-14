using Content.Client.UserInterface.Controls;
using Content.Shared._NF.Power;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.XAML;

namespace Content.Client._NF.Power;

/// <summary>
/// Interface control for items with adjustable power draw.
/// </summary>
/// <seealso cref="AdjustablePowerDrawBoundUserInterface"/>
[GenerateTypedNameReferences]
public sealed partial class AdjustablePowerDrawMenu : FancyWindow
{
    // Dependencies
    [Dependency] private readonly IEntityManager _entityManager = null!;

    // The entity that this UI is for.
    private EntityUid _entity;

    // Events for the BUI to subscribe to.
    public event Action<float>? OnSetLoad;
    public event Action<bool>? OnSetPowered;

    public AdjustablePowerDrawMenu()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        PowerDropDown.AddItem("W", 0);
        PowerDropDown.AddItem("kW", 1);
        PowerDropDown.AddItem("MW", 2);
        PowerDropDown.AddItem("GW", 3);

        SubmitButton.OnPressed += _ => CheckAndInvokeLoad();
        TogglePowerButton.OnPressed += _ => OnSetPowered?.Invoke(TogglePowerButton.Pressed);
    }

    public void SetEntity(EntityUid entity)
    {
        _entity = entity;

        this.SetInfoFromEntity(_entityManager, _entity);
    }

    public void Update(AdjustablePowerDrawBuiState msg)
    {
        TogglePowerButton.Pressed = msg.On;

        // Get power in proper units
        if (msg.Load >= 0)
        {
            if (msg.Load >= 1_000_000_000)
            {
                Load.Text = $"{msg.Load / 1_000_000_000:F2}";
                PowerDropDown.TrySelect(3);
            }
            else if (msg.Load >= 1_000_000)
            {
                Load.Text = $"{msg.Load / 1_000_000:F2}";
                PowerDropDown.TrySelect(2);
            }
            else if (msg.Load >= 1_000)
            {
                Load.Text = $"{msg.Load / 1_000:F2}";
                PowerDropDown.TrySelect(1);
            }
            else
            {
                Load.Text = $"{msg.Load:F2}";
                PowerDropDown.TrySelect(0);
            }
        }
    }

    private void CheckAndInvokeLoad()
    {

    }
}
